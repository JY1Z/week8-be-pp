{
  "openapi": "3.0.0",
  "info": {
    "title": "Tour API",
    "version": "1.0.0",
    "description": "API for managing tours."
  },
  "servers": [
    {
      "url": "http://localhost:5000/api"
    }
  ],
  "paths": {
    "/tours": {
      "get": {
        "summary": "Get all tours",
        "description": "Retrieve a list of all tours.",
        "tags": ["Tour"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of tours",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Tour"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Failed to retrieve tours"
          }
        }
      },
      "post": {
        "summary": "Create a new tour",
        "description": "Add a new tour.",
        "tags": ["Tour"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tour"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tour created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "400": {
            "description": "Failed to create tour"
          }
        }
      }
    },
    "/tours/{tourId}": {
      "get": {
        "summary": "Get a tour by ID",
        "description": "Retrieve a single tour by its ID.",
        "tags": ["Tour"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the tour to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "Tour found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "400": {
            "description": "Invalid tour ID"
          },
          "404": {
            "description": "Tour not found"
          }
        }
      },
      "put": {
        "summary": "Update a tour by ID",
        "description": "Update the details of an existing tour by its ID.",
        "tags": ["Tour"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the tour to update"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Tour"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tour updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Tour"
                }
              }
            }
          },
          "400": {
            "description": "Invalid tour ID"
          },
          "404": {
            "description": "Tour not found"
          }
        }
      },
      "delete": {
        "summary": "Delete a tour by ID",
        "description": "Remove an existing tour by its ID.",
        "tags": ["Tour"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "tourId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The ID of the tour to delete"
          }
        ],
        "responses": {
          "204": {
            "description": "Tour deleted successfully"
          },
          "400": {
            "description": "Invalid tour ID"
          },
          "404": {
            "description": "Tour not found"
          }
        }
      }
    },
  
  
    "/todo-tasks": {
      "get": {
        "summary": "Get all TodoTasks",
        "tags": ["TodoTasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "A list of TodoTasks",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TodoTask"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "post": {
        "summary": "Add a new TodoTask",
        "tags": ["TodoTasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTaskInput"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "TodoTask created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    },
    "/todo-tasks/{id}": {
      "get": {
        "summary": "Get a TodoTask by ID",
        "tags": ["TodoTasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "TodoTask ID"
          }
        ],
        "responses": {
          "200": {
            "description": "TodoTask found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "404": {
            "description": "TodoTask not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "delete": {
        "summary": "Delete a TodoTask by ID",
        "tags": ["TodoTasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "TodoTask ID"
          }
        ],
        "responses": {
          "204": {
            "description": "TodoTask deleted"
          },
          "404": {
            "description": "TodoTask not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      },
      "put": {
        "summary": "Update a TodoTask by ID",
        "tags": ["TodoTasks"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "TodoTask ID"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TodoTaskInput"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "TodoTask updated",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TodoTask"
                }
              }
            }
          },
          "404": {
            "description": "TodoTask not found"
          },
          "500": {
            "description": "Server error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Tour": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Grand Canyon Adventure"
          },
          "info": {
            "type": "string",
            "example": "Explore the beautiful Grand Canyon."
          },
          "image": {
            "type": "string",
            "example": "https://example.com/images/grand_canyon.jpg"
          },
          "price": {
            "type": "string",
            "example": "$299"
          }
        }
      },
      "TodoTask": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "61616c156f1c1a00164f8f52"
          },
          "title": {
            "type": "string",
            "example": "Buy groceries"
          },
          "description": {
            "type": "string",
            "example": "Buy milk, eggs, and bread"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-12T00:00:00.000Z"
          },
          "completed": {
            "type": "boolean",
            "example": false
          },
          "user_id": {
            "type": "string",
            "example": "60a2fcd8776400001c4d3b15"
          }
        }
      },
      "TodoTaskInput": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "example": "Buy groceries"
          },
          "description": {
            "type": "string",
            "example": "Buy milk, eggs, and bread"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time",
            "example": "2023-10-12T00:00:00.000Z"
          },
          "completed": {
            "type": "boolean",
            "example": false
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}

